<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017. RayLeigh Software, Inc.
  ~ ALL RIGHTS RESERVED.
  ~
  ~   This software is the confidential and proprietary information of
  ~   RayLeigh Software Inc. ("Confidential Information").  You shall not
  ~   disclose such Confidential Information and shall use it only in
  ~   accordance with the terms of the license agreement you entered
  ~   into with RayLeigh Software Inc.
  ~
  ~  RayLeigh SOFTWARE INC. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT
  ~  THE SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED,
  ~  INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
  ~  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
  ~  NON-INFRINGEMENT. RayLeigh SOFTWARE SHALL NOT BE LIABLE FOR ANY
  ~  DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
  ~  OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.rayleigh</groupId>
    <artifactId>batman</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>batman</name>
    <description>batman for codeGenerator</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springfox.version>2.8.0</springfox.version>
        <fastjson.version>1.2.33</fastjson.version>
        <springloaded.version>1.2.6.RELEASE</springloaded.version>
        <org.mapstruct.version>1.1.0.Final</org.mapstruct.version>
        <start-class>com.rayleigh.batman.BatmanApplication</start-class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.rayleigh</groupId>
            <artifactId>core</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-aop</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--模板配置-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--排除tomcat 使用undertow-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>


        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--swaggerUI支持-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
        </dependency>

        <!--fastJson-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!--thymeleaf解析太严格，你结束符，这个框架可以帮助完善结束符-->
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>1.9.22</version>
        </dependency>

        <!--devtools热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入  -->
        </dependency>

        <!--mapstruct支持-->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
            <version>${org.mapstruct.version}</version>
        </dependency>

        <!--打印hibernate有参数日志-->
        <dependency>
            <groupId>p6spy</groupId>
            <artifactId>p6spy</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.29</version>
        </dependency>


        <!--解决jackson解析json结果时加载已设置为懒加载的数据问题-->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hibernate5</artifactId>
            <version>2.9.0.pr4</version>
        </dependency>

        <!--为了使用ant的文件压缩-->
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.6.5</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.4</version>
                </plugin>
            </plugins>
        </pluginManagement>



        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.artifactId}</finalName>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <effort>default</effort>
                    <failOnError>false</failOnError>
                    <!--
                    <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                    <includeFilterFile>findbugs-include.xml</includeFilterFile>-->
                    <!--跳过的类型-->
                    <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors>
                    <!--第三方jar检测-->
                    <!--<pluginList>myDetectors.jar, yourDetectors.jar</pluginList>-->

                </configuration>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--mapstruct支持-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-compiler-plugin</artifactId>-->
            <!--<version>3.5.1</version>-->
            <!--<configuration>-->
            <!--<source>1.8</source> &lt;!&ndash; or higher, depending on your project &ndash;&gt;-->
            <!--<target>1.8</target> &lt;!&ndash; or higher, depending on your project &ndash;&gt;-->
            <!--<annotationProcessorPaths>-->
            <!--<path>-->
            <!--<groupId>org.mapstruct</groupId>-->
            <!--<artifactId>mapstruct-processor</artifactId>-->
            <!--<version>${org.mapstruct.version}</version>-->
            <!--</path>-->
            <!--</annotationProcessorPaths>-->
            <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>


</project>
